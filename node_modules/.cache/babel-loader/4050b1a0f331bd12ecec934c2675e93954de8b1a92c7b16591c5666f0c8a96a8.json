{"ast":null,"code":"var _jsxFileName = \"/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/page/PostPage/index.js\",\n  _s = $RefreshSig$();\nimport \"./style.css\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Post from \"../../components/Post/index\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Spinner from \"../../components/Spinner\";\nimport usePostById from \"../../hooks/usePostById\";\nimport { useTokenContext } from \"../../context/TokenContext\";\nimport CommentForm from \"../../components/CommentForm/index\";\n\n// Página que carga un solo post\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  // Recogemos el id de los params de la url\n  const {\n    id\n  } = useParams();\n  const {\n    loggedUser\n  } = useTokenContext();\n  const {\n    username: usernameLogged,\n    avatar: avatarLogged,\n    id: idLogged\n  } = loggedUser;\n\n  // Llamamos al custom hook useEntryById y le pasamos el id que hemos recogido de los params. Este hook se va a encargar de crear los estados entry, loading y errorMessage y un useEffect que carge los datos de la API después del primer render\n  const {\n    post,\n    loading,\n    errorMessage,\n    addVoteToPost,\n    setPost\n  } = usePostById(id);\n\n  // Hacemos destructuring del objeto post\n  const {\n    text,\n    image,\n    avatar,\n    username,\n    email,\n    place,\n    idUser,\n    rate,\n    owner,\n    ratedByMe,\n    coments,\n    valueRated,\n    createdAt\n  } = post;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    classname: \"postSection\",\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n        msg: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Volver a inicio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }, this), Object.values(post).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divEnvoltorio\",\n      children: [/*#__PURE__*/_jsxDEV(Post, {\n        id: id,\n        text: text,\n        image: image,\n        avatar: avatar,\n        username: username,\n        email: email,\n        place: place,\n        idUser: idUser,\n        rate: rate,\n        owner: owner,\n        ratedByMe: ratedByMe,\n        valueRated: valueRated,\n        createdAt: createdAt,\n        addVoteToPost: addVoteToPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n        idPost: id,\n        idUser: idLogged,\n        coments: coments,\n        setPost: setPost,\n        post: post.coments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(PostPage, \"Zr5oFVw5ZurOuu0jLIKNP8XsSoE=\", false, function () {\n  return [useParams, useTokenContext, usePostById];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["Link","useParams","Post","ErrorMessage","Spinner","usePostById","useTokenContext","CommentForm","PostPage","id","loggedUser","username","usernameLogged","avatar","avatarLogged","idLogged","post","loading","errorMessage","addVoteToPost","setPost","text","image","email","place","idUser","rate","owner","ratedByMe","coments","valueRated","createdAt","Object","values","length"],"sources":["/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/page/PostPage/index.js"],"sourcesContent":["import \"./style.css\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Post from \"../../components/Post/index\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Spinner from \"../../components/Spinner\";\nimport usePostById from \"../../hooks/usePostById\";\nimport { useTokenContext } from \"../../context/TokenContext\";\n\nimport CommentForm from \"../../components/CommentForm/index\";\n\n// Página que carga un solo post\nconst PostPage = () => {\n  // Recogemos el id de los params de la url\n  const { id } = useParams();\n\n  const { loggedUser } = useTokenContext();\n\n  const {\n    username: usernameLogged,\n    avatar: avatarLogged,\n    id: idLogged,\n  } = loggedUser;\n\n  // Llamamos al custom hook useEntryById y le pasamos el id que hemos recogido de los params. Este hook se va a encargar de crear los estados entry, loading y errorMessage y un useEffect que carge los datos de la API después del primer render\n  const { post, loading, errorMessage, addVoteToPost, setPost } =\n    usePostById(id);\n\n  // Hacemos destructuring del objeto post\n  const {\n    text,\n    image,\n    avatar,\n    username,\n    email,\n    place,\n    idUser,\n    rate,\n    owner,\n    ratedByMe,\n    coments,\n    valueRated,\n    createdAt,\n  } = post;\n\n  return (\n    <section classname=\"postSection\">\n      {/* <h2>Post page</h2> */}\n\n      {/* Si hay mensaje de error, pintamos el componente ErrorMessage y un link\n      para volver a inicio */}\n      {errorMessage && (\n        <>\n          <ErrorMessage msg={errorMessage} />\n          <Link to=\"/\">Volver a inicio</Link>\n        </>\n      )}\n      {loading && <Spinner />}\n\n      {/* Si el objeto post no está vacío, pintamos el componente Post con todos los datos del objeto */}\n      {Object.values(post).length > 0 && (\n        <div className=\"divEnvoltorio\">\n          <Post\n            id={id}\n            text={text}\n            image={image}\n            avatar={avatar}\n            username={username}\n            email={email}\n            place={place}\n            idUser={idUser}\n            rate={rate}\n            owner={owner}\n            ratedByMe={ratedByMe}\n            valueRated={valueRated}\n            createdAt={createdAt}\n            addVoteToPost={addVoteToPost}\n          />\n          <CommentForm\n            idPost={id}\n            idUser={idLogged}\n            coments={coments}\n            setPost={setPost}\n            post={post.coments}\n          />\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default PostPage;\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,SAASA,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,OAAOC,IAAI,MAAM,6BAA6B;AAC9C,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,WAAW,MAAM,yBAAyB;AACjD,SAASC,eAAe,QAAQ,4BAA4B;AAE5D,OAAOC,WAAW,MAAM,oCAAoC;;AAE5D;AAAA;AAAA;AACA,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB;EACA,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,EAAE;EAE1B,MAAM;IAAES;EAAW,CAAC,GAAGJ,eAAe,EAAE;EAExC,MAAM;IACJK,QAAQ,EAAEC,cAAc;IACxBC,MAAM,EAAEC,YAAY;IACpBL,EAAE,EAAEM;EACN,CAAC,GAAGL,UAAU;;EAEd;EACA,MAAM;IAAEM,IAAI;IAAEC,OAAO;IAAEC,YAAY;IAAEC,aAAa;IAAEC;EAAQ,CAAC,GAC3Df,WAAW,CAACI,EAAE,CAAC;;EAEjB;EACA,MAAM;IACJY,IAAI;IACJC,KAAK;IACLT,MAAM;IACNF,QAAQ;IACRY,KAAK;IACLC,KAAK;IACLC,MAAM;IACNC,IAAI;IACJC,KAAK;IACLC,SAAS;IACTC,OAAO;IACPC,UAAU;IACVC;EACF,CAAC,GAAGf,IAAI;EAER,oBACE;IAAS,SAAS,EAAC,aAAa;IAAA,WAK7BE,YAAY,iBACX;MAAA,wBACE,QAAC,YAAY;QAAC,GAAG,EAAEA;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,eACnC,QAAC,IAAI;QAAC,EAAE,EAAC,GAAG;QAAA,UAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA,gBAEtC,EACAD,OAAO,iBAAI,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG,EAGtBe,MAAM,CAACC,MAAM,CAACjB,IAAI,CAAC,CAACkB,MAAM,GAAG,CAAC,iBAC7B;MAAK,SAAS,EAAC,eAAe;MAAA,wBAC5B,QAAC,IAAI;QACH,EAAE,EAAEzB,EAAG;QACP,IAAI,EAAEY,IAAK;QACX,KAAK,EAAEC,KAAM;QACb,MAAM,EAAET,MAAO;QACf,QAAQ,EAAEF,QAAS;QACnB,KAAK,EAAEY,KAAM;QACb,KAAK,EAAEC,KAAM;QACb,MAAM,EAAEC,MAAO;QACf,IAAI,EAAEC,IAAK;QACX,KAAK,EAAEC,KAAM;QACb,SAAS,EAAEC,SAAU;QACrB,UAAU,EAAEE,UAAW;QACvB,SAAS,EAAEC,SAAU;QACrB,aAAa,EAAEZ;MAAc;QAAA;QAAA;QAAA;MAAA,QAC7B,eACF,QAAC,WAAW;QACV,MAAM,EAAEV,EAAG;QACX,MAAM,EAAEM,QAAS;QACjB,OAAO,EAAEc,OAAQ;QACjB,OAAO,EAAET,OAAQ;QACjB,IAAI,EAAEJ,IAAI,CAACa;MAAQ;QAAA;QAAA;QAAA;MAAA,QACnB;IAAA;MAAA;MAAA;MAAA;IAAA,QAEL;EAAA;IAAA;IAAA;IAAA;EAAA,QACO;AAEd,CAAC;AAAC,GA7EIrB,QAAQ;EAAA,QAEGP,SAAS,EAEDK,eAAe,EAUpCD,WAAW;AAAA;AAAA,KAdTG,QAAQ;AA+Ed,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}