{"ast":null,"code":"var _jsxFileName = \"/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/page/PostPage/index.js\",\n  _s = $RefreshSig$();\nimport { Link, useParams } from \"react-router-dom\";\nimport Post from \"../../components/Post/index\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Spinner from \"../../components/Spinner\";\nimport useEntryById from \"../../hooks/useEntryById\";\n\n// Página que carga una sola entry\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EntryPage = () => {\n  _s();\n  // Recogemos el id de los params de la url\n  const {\n    id\n  } = useParams();\n\n  // Llamamos al custom hook useEntryById y le pasamos el id que hemos recogido de los params. Este hook se va a encargar de crear los estados entry, loading y errorMessage y un useEffect que carge los datos de la API después del primer render\n  const {\n    entry,\n    loading,\n    errorMessage,\n    addVoteToEntry\n  } = useEntryById(id);\n\n  // Hacemos destructuring del objeto entry\n  const {\n    title,\n    description,\n    place,\n    votes,\n    idUser,\n    createdAt,\n    photos,\n    voteByLoggedUser\n  } = entry;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Entry page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n        msg: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Volver a inicio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this), Object.values(entry).length > 0 && /*#__PURE__*/_jsxDEV(Post, {\n      id: id,\n      title: title,\n      description: description,\n      place: place,\n      votes: votes,\n      ownerId: idUser,\n      createdAt: createdAt,\n      photos: photos,\n      voteByLoggedUser: voteByLoggedUser,\n      addVoteToEntry: addVoteToEntry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(EntryPage, \"QyFMj3LSHOKfjq5zJSRv1g+jiog=\", false, function () {\n  return [useParams, useEntryById];\n});\n_c = EntryPage;\nexport default EntryPage;\nvar _c;\n$RefreshReg$(_c, \"EntryPage\");","map":{"version":3,"names":["Link","useParams","Post","ErrorMessage","Spinner","useEntryById","EntryPage","id","entry","loading","errorMessage","addVoteToEntry","title","description","place","votes","idUser","createdAt","photos","voteByLoggedUser","Object","values","length"],"sources":["/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/page/PostPage/index.js"],"sourcesContent":["import { Link, useParams } from \"react-router-dom\";\nimport Post from \"../../components/Post/index\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport Spinner from \"../../components/Spinner\";\nimport useEntryById from \"../../hooks/useEntryById\";\n\n// Página que carga una sola entry\nconst EntryPage = () => {\n  // Recogemos el id de los params de la url\n  const { id } = useParams();\n\n  // Llamamos al custom hook useEntryById y le pasamos el id que hemos recogido de los params. Este hook se va a encargar de crear los estados entry, loading y errorMessage y un useEffect que carge los datos de la API después del primer render\n  const { entry, loading, errorMessage, addVoteToEntry } = useEntryById(id);\n\n  // Hacemos destructuring del objeto entry\n  const {\n    title,\n    description,\n    place,\n    votes,\n    idUser,\n    createdAt,\n    photos,\n    voteByLoggedUser,\n  } = entry;\n\n  return (\n    <section>\n      <h2>Entry page</h2>\n\n      {/* Si hay mensaje de error, pintamos el componente ErrorMessage y un link\n      para volver a inicio */}\n      {errorMessage && (\n        <>\n          <ErrorMessage msg={errorMessage} />\n          <Link to=\"/\">Volver a inicio</Link>\n        </>\n      )}\n      {loading && <Spinner />}\n\n      {/* Si el objeto entry no está vacío, pintamos el componente Entry con todos los datos del objeto */}\n      {Object.values(entry).length > 0 && (\n        <Post\n          id={id}\n          title={title}\n          description={description}\n          place={place}\n          votes={votes}\n          ownerId={idUser}\n          createdAt={createdAt}\n          photos={photos}\n          voteByLoggedUser={voteByLoggedUser}\n          addVoteToEntry={addVoteToEntry}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default EntryPage;\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,OAAOC,IAAI,MAAM,6BAA6B;AAC9C,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,YAAY,MAAM,0BAA0B;;AAEnD;AAAA;AAAA;AACA,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB;EACA,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,EAAE;;EAE1B;EACA,MAAM;IAAEO,KAAK;IAAEC,OAAO;IAAEC,YAAY;IAAEC;EAAe,CAAC,GAAGN,YAAY,CAACE,EAAE,CAAC;;EAEzE;EACA,MAAM;IACJK,KAAK;IACLC,WAAW;IACXC,KAAK;IACLC,KAAK;IACLC,MAAM;IACNC,SAAS;IACTC,MAAM;IACNC;EACF,CAAC,GAAGX,KAAK;EAET,oBACE;IAAA,wBACE;MAAA,UAAI;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK,EAIlBE,YAAY,iBACX;MAAA,wBACE,QAAC,YAAY;QAAC,GAAG,EAAEA;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,eACnC,QAAC,IAAI;QAAC,EAAE,EAAC,GAAG;QAAA,UAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA,gBAEtC,EACAD,OAAO,iBAAI,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG,EAGtBW,MAAM,CAACC,MAAM,CAACb,KAAK,CAAC,CAACc,MAAM,GAAG,CAAC,iBAC9B,QAAC,IAAI;MACH,EAAE,EAAEf,EAAG;MACP,KAAK,EAAEK,KAAM;MACb,WAAW,EAAEC,WAAY;MACzB,KAAK,EAAEC,KAAM;MACb,KAAK,EAAEC,KAAM;MACb,OAAO,EAAEC,MAAO;MAChB,SAAS,EAAEC,SAAU;MACrB,MAAM,EAAEC,MAAO;MACf,gBAAgB,EAAEC,gBAAiB;MACnC,cAAc,EAAER;IAAe;MAAA;MAAA;MAAA;IAAA,QAElC;EAAA;IAAA;IAAA;IAAA;EAAA,QACO;AAEd,CAAC;AAAC,GAlDIL,SAAS;EAAA,QAEEL,SAAS,EAGiCI,YAAY;AAAA;AAAA,KALjEC,SAAS;AAoDf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}