{"ast":null,"code":"var _jsxFileName = \"/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/components/DeleteComentPost/index.js\",\n  _s = $RefreshSig$();\nimport \"./style.css\";\nimport { useTokenContext } from \"../../context/TokenContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useEffect } from \"react\";\n// import usePosts from \"../../hooks/usePosts\";\nimport { usePostsContext } from \"../../context/PostsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeleteComentPost = _ref => {\n  _s();\n  let {\n    idUser,\n    idComent,\n    /* setShowBorrarComentModal, */\n    setPost\n  } = _ref;\n  const navigate = useNavigate();\n  const {\n    token\n  } = useTokenContext();\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    //fetch para borrar el post de la BBDD\n    onClick: async () => {\n      try {\n        const res = await fetch(`http://localhost:4000/coments/${idComent}`, {\n          method: \"DELETE\",\n          body: JSON.stringify({\n            idUser,\n            idComent\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: token\n          }\n        });\n        const body = await res.json();\n        if (!res.ok) {\n          throw new Error(body.message);\n        }\n        setPost(posts => posts.filter(post => post.id !== idPost));\n\n        // console.log(\"body.data.posts\", body.data.posts);\n        // setPosts(body.data.posts);\n        navigate(\"/\");\n        toast.success(body.message);\n      } catch (error) {\n        console.error(error);\n        toast.error(error.message);\n      } finally {\n        /*           setShowBorrarComentModal(false);\n         */\n      }\n    },\n    children: \"Borrar Post\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n// }, [posts]);\n// };\n_s(DeleteComentPost, \"oeQChelorh6jURl/YidKe4+6geo=\", false, function () {\n  return [useNavigate, useTokenContext];\n});\n_c = DeleteComentPost;\nexport default DeleteComentPost;\nvar _c;\n$RefreshReg$(_c, \"DeleteComentPost\");","map":{"version":3,"names":["useTokenContext","useNavigate","toast","useEffect","usePostsContext","DeleteComentPost","idUser","idComent","setPost","navigate","token","res","fetch","method","body","JSON","stringify","headers","Authorization","json","ok","Error","message","posts","filter","post","id","idPost","success","error","console"],"sources":["/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/components/DeleteComentPost/index.js"],"sourcesContent":["import \"./style.css\";\nimport { useTokenContext } from \"../../context/TokenContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useEffect } from \"react\";\n// import usePosts from \"../../hooks/usePosts\";\nimport { usePostsContext } from \"../../context/PostsContext\";\n\nconst DeleteComentPost = ({\n  idUser,\n  idComent,\n  /* setShowBorrarComentModal, */\n  setPost,\n}) => {\n  const navigate = useNavigate();\n\n  const { token } = useTokenContext();\n\n  return (\n    <button\n      //fetch para borrar el post de la BBDD\n      onClick={async () => {\n        try {\n          const res = await fetch(`http://localhost:4000/coments/${idComent}`, {\n            method: \"DELETE\",\n            body: JSON.stringify({ idUser, idComent }),\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: token,\n            },\n          });\n\n          const body = await res.json();\n\n          if (!res.ok) {\n            throw new Error(body.message);\n          }\n          setPost((posts) => posts.filter((post) => post.id !== idPost));\n\n          // console.log(\"body.data.posts\", body.data.posts);\n          // setPosts(body.data.posts);\n          navigate(\"/\");\n          toast.success(body.message);\n        } catch (error) {\n          console.error(error);\n          toast.error(error.message);\n        } finally {\n          /*           setShowBorrarComentModal(false);\n           */\n        }\n      }}\n    >\n      Borrar Post\n    </button>\n  );\n};\n// }, [posts]);\n// };\n\nexport default DeleteComentPost;\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,SAASA,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,SAAS,QAAQ,OAAO;AACjC;AACA,SAASC,eAAe,QAAQ,4BAA4B;AAAC;AAE7D,MAAMC,gBAAgB,GAAG,QAKnB;EAAA;EAAA,IALoB;IACxBC,MAAM;IACNC,QAAQ;IACR;IACAC;EACF,CAAC;EACC,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAE9B,MAAM;IAAES;EAAM,CAAC,GAAGV,eAAe,EAAE;EAEnC,oBACE;IACE;IACA,OAAO,EAAE,YAAY;MACnB,IAAI;QACF,MAAMW,GAAG,GAAG,MAAMC,KAAK,CAAE,iCAAgCL,QAAS,EAAC,EAAE;UACnEM,MAAM,EAAE,QAAQ;UAChBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEV,MAAM;YAAEC;UAAS,CAAC,CAAC;UAC1CU,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAER;UACjB;QACF,CAAC,CAAC;QAEF,MAAMI,IAAI,GAAG,MAAMH,GAAG,CAACQ,IAAI,EAAE;QAE7B,IAAI,CAACR,GAAG,CAACS,EAAE,EAAE;UACX,MAAM,IAAIC,KAAK,CAACP,IAAI,CAACQ,OAAO,CAAC;QAC/B;QACAd,OAAO,CAAEe,KAAK,IAAKA,KAAK,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKC,MAAM,CAAC,CAAC;;QAE9D;QACA;QACAlB,QAAQ,CAAC,GAAG,CAAC;QACbP,KAAK,CAAC0B,OAAO,CAACd,IAAI,CAACQ,OAAO,CAAC;MAC7B,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB3B,KAAK,CAAC2B,KAAK,CAACA,KAAK,CAACP,OAAO,CAAC;MAC5B,CAAC,SAAS;QACR;AACV;MADU;IAGJ,CAAE;IAAA,UACH;EAED;IAAA;IAAA;IAAA;EAAA,QAAS;AAEb,CAAC;AACD;AACA;AAAA,GAjDMjB,gBAAgB;EAAA,QAMHJ,WAAW,EAEVD,eAAe;AAAA;AAAA,KAR7BK,gBAAgB;AAmDtB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}