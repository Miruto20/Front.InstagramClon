{"ast":null,"code":"var _jsxFileName = \"/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/components/EmailButton/index.js\",\n  _s = $RefreshSig$();\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTokenContext } from \"../../context/TokenContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailButton = _ref => {\n  _s();\n  let {\n    email,\n    setShowMailModal,\n    newEmail\n  } = _ref;\n  const navigate = useNavigate();\n  const {\n    token\n  } = useTokenContext();\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    //fetch para solicitar que te envíe un correo con una nueva contraseña\n    onClick: async () => {\n      try {\n        const res = await fetch(\"http://localhost:4000/users/email/recover\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            email,\n            newEmail\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: token\n          }\n        });\n        const body = await res.json();\n        console.log(body);\n        if (!res.ok) {\n          throw new Error(body.message);\n        }\n\n        // setCambioContraseña(true);\n        navigate(\"/login\");\n        toast.success(body.message);\n      } catch (error) {\n        console.error(error);\n        toast.error(error.message);\n      } finally {\n        setShowMailModal(false);\n      }\n    },\n    children: \"Cambiar email\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailButton, \"oeQChelorh6jURl/YidKe4+6geo=\", false, function () {\n  return [useNavigate, useTokenContext];\n});\n_c = EmailButton;\nexport default EmailButton;\nvar _c;\n$RefreshReg$(_c, \"EmailButton\");","map":{"version":3,"names":["toast","useNavigate","useTokenContext","EmailButton","email","setShowMailModal","newEmail","navigate","token","res","fetch","method","body","JSON","stringify","headers","Authorization","json","console","log","ok","Error","message","success","error"],"sources":["/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/components/EmailButton/index.js"],"sourcesContent":["import { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTokenContext } from \"../../context/TokenContext\";\n\nconst EmailButton = ({ email, setShowMailModal, newEmail }) => {\n  const navigate = useNavigate();\n  const { token } = useTokenContext();\n\n  return (\n    <button\n      //fetch para solicitar que te envíe un correo con una nueva contraseña\n      onClick={async () => {\n        try {\n          const res = await fetch(\"http://localhost:4000/users/email/recover\", {\n            method: \"POST\",\n            body: JSON.stringify({ email, newEmail }),\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: token,\n            },\n          });\n\n          const body = await res.json();\n          console.log(body);\n\n          if (!res.ok) {\n            throw new Error(body.message);\n          }\n\n          // setCambioContraseña(true);\n          navigate(\"/login\");\n\n          toast.success(body.message);\n        } catch (error) {\n          console.error(error);\n          toast.error(error.message);\n        } finally {\n          setShowMailModal(false);\n        }\n      }}\n    >\n      Cambiar email\n    </button>\n  );\n};\n\nexport default EmailButton;\n"],"mappings":";;AAAA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,eAAe,QAAQ,4BAA4B;AAAC;AAE7D,MAAMC,WAAW,GAAG,QAA2C;EAAA;EAAA,IAA1C;IAAEC,KAAK;IAAEC,gBAAgB;IAAEC;EAAS,CAAC;EACxD,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAM;IAAEO;EAAM,CAAC,GAAGN,eAAe,EAAE;EAEnC,oBACE;IACE;IACA,OAAO,EAAE,YAAY;MACnB,IAAI;QACF,MAAMO,GAAG,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;UACnEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEV,KAAK;YAAEE;UAAS,CAAC,CAAC;UACzCS,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAER;UACjB;QACF,CAAC,CAAC;QAEF,MAAMI,IAAI,GAAG,MAAMH,GAAG,CAACQ,IAAI,EAAE;QAC7BC,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;QAEjB,IAAI,CAACH,GAAG,CAACW,EAAE,EAAE;UACX,MAAM,IAAIC,KAAK,CAACT,IAAI,CAACU,OAAO,CAAC;QAC/B;;QAEA;QACAf,QAAQ,CAAC,QAAQ,CAAC;QAElBP,KAAK,CAACuB,OAAO,CAACX,IAAI,CAACU,OAAO,CAAC;MAC7B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;QACpBxB,KAAK,CAACwB,KAAK,CAACA,KAAK,CAACF,OAAO,CAAC;MAC5B,CAAC,SAAS;QACRjB,gBAAgB,CAAC,KAAK,CAAC;MACzB;IACF,CAAE;IAAA,UACH;EAED;IAAA;IAAA;IAAA;EAAA,QAAS;AAEb,CAAC;AAAC,GAxCIF,WAAW;EAAA,QACEF,WAAW,EACVC,eAAe;AAAA;AAAA,KAF7BC,WAAW;AA0CjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}