{"ast":null,"code":"var _jsxFileName = \"/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/components/PassButton/index.js\",\n  _s = $RefreshSig$();\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PassButton = _ref => {\n  _s();\n  let {\n    email,\n    setShowModal\n  } = _ref;\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    //fetch para solicitar que te envíe un correo con una nueva contraseña\n    onClick: async () => {\n      try {\n        const res = await fetch(\"http://localhost:4000/users/password/recover\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            email\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const body = await res.json();\n        console.log(body);\n        if (!res.ok) {\n          throw new Error(body.message);\n        }\n        navigate(\"/login\");\n        toast.success(body.message);\n      } catch (error) {\n        console.error(error);\n        toast.error(error.message);\n      } finally {\n        setShowModal(false);\n      }\n    },\n    children: \"Cambiar contrase\\xF1a\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(PassButton, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = PassButton;\nexport default PassButton;\nvar _c;\n$RefreshReg$(_c, \"PassButton\");","map":{"version":3,"names":["toast","useNavigate","PassButton","email","setShowModal","navigate","res","fetch","method","body","JSON","stringify","headers","json","console","log","ok","Error","message","success","error"],"sources":["/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/components/PassButton/index.js"],"sourcesContent":["import { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst PassButton = ({ email, setShowModal }) => {\n  const navigate = useNavigate();\n\n  return (\n    <button\n      //fetch para solicitar que te envíe un correo con una nueva contraseña\n      onClick={async () => {\n        try {\n          const res = await fetch(\n            \"http://localhost:4000/users/password/recover\",\n            {\n              method: \"POST\",\n              body: JSON.stringify({ email }),\n              headers: { \"Content-Type\": \"application/json\" },\n            }\n          );\n\n          const body = await res.json();\n          console.log(body);\n\n          if (!res.ok) {\n            throw new Error(body.message);\n          }\n\n          navigate(\"/login\");\n\n          toast.success(body.message);\n        } catch (error) {\n          console.error(error);\n          toast.error(error.message);\n        } finally {\n          setShowModal(false);\n        }\n      }}\n    >\n      Cambiar contraseña\n    </button>\n  );\n};\n\nexport default PassButton;\n"],"mappings":";;AAAA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAE/C,MAAMC,UAAU,GAAG,QAA6B;EAAA;EAAA,IAA5B;IAAEC,KAAK;IAAEC;EAAa,CAAC;EACzC,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAE9B,oBACE;IACE;IACA,OAAO,EAAE,YAAY;MACnB,IAAI;QACF,MAAMK,GAAG,GAAG,MAAMC,KAAK,CACrB,8CAA8C,EAC9C;UACEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAER;UAAM,CAAC,CAAC;UAC/BS,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB;QAChD,CAAC,CACF;QAED,MAAMH,IAAI,GAAG,MAAMH,GAAG,CAACO,IAAI,EAAE;QAC7BC,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;QAEjB,IAAI,CAACH,GAAG,CAACU,EAAE,EAAE;UACX,MAAM,IAAIC,KAAK,CAACR,IAAI,CAACS,OAAO,CAAC;QAC/B;QAEAb,QAAQ,CAAC,QAAQ,CAAC;QAElBL,KAAK,CAACmB,OAAO,CAACV,IAAI,CAACS,OAAO,CAAC;MAC7B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;QACpBpB,KAAK,CAACoB,KAAK,CAACA,KAAK,CAACF,OAAO,CAAC;MAC5B,CAAC,SAAS;QACRd,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAE;IAAA,UACH;EAED;IAAA;IAAA;IAAA;EAAA,QAAS;AAEb,CAAC;AAAC,GAtCIF,UAAU;EAAA,QACGD,WAAW;AAAA;AAAA,KADxBC,UAAU;AAwChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}