{"ast":null,"code":"var _jsxFileName = \"/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/page/UserPostPage/index.js\",\n  _s = $RefreshSig$();\nimport \"./style.css\";\nimport { useTokenContext } from \"../../context/TokenContext\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport usePostsByIdUser from \"../../hooks/usePostsByIdUser\";\nimport Post from \"../../components/Post\";\n//                 rate={currentPost.rate}esta sería la prop adecuada para pasarle a POSt. pero no quiero que enseñe en el header en esta pagina nunca la estrella\n// Ya que desde el back en este caso no llega la ingo de valueRated dado que no le puedo pasar tal y como está configurado el back, la info del logged User...(o si podría con isAuth abriendolo tengo la info del loggeado ademas de idUser que es el que recibe por padParam)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPostPage = () => {\n  _s();\n  const {\n    token,\n    loggedUser\n  } = useTokenContext();\n  const {\n    idUser\n  } = useParams();\n  const {\n    post,\n    /* setPost,\n    errorMessage, */\n    usernamePage,\n    avatarPage,\n    addVoteToPost /* \n                  setUsernamePage,\n                  loading,\n                  idUser: idUserPage */\n  } = usePostsByIdUser(idUser);\n  const {\n    username,\n    avatar,\n    role,\n    createdAt,\n    email\n  } = loggedUser;\n\n  // Si no hay token, redireccionamos a \"/login\"\"\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"profileName\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:4000/${avatarPage}`,\n        alt: username,\n        className: \"fotoAvatarPeque\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), usernamePage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), Object.values(post).length > 0 && post.map(currentPost => {\n      console.log(\"currentPost\", currentPost);\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"userPost\",\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          id: currentPost.id,\n          text: currentPost.text,\n          image: currentPost.image,\n          avatar: currentPost.avatar,\n          username: currentPost.username,\n          email: currentPost.email,\n          place: currentPost.place,\n          ratedByMe: currentPost.ratedByMe,\n          idUser: currentPost.idUser,\n          rate: currentPost.rate,\n          owner: currentPost.owner,\n          createdAt: currentPost.createdAt,\n          valueRated: currentPost.valueRated,\n          addVoteToPost: addVoteToPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)\n      }, currentPost.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPostPage, \"XrAPXI2n3KHQT4d7SueX6wrfwGM=\", false, function () {\n  return [useTokenContext, useParams, usePostsByIdUser];\n});\n_c = UserPostPage;\nexport default UserPostPage;\nvar _c;\n$RefreshReg$(_c, \"UserPostPage\");","map":{"version":3,"names":["useTokenContext","Navigate","useParams","usePostsByIdUser","Post","UserPostPage","token","loggedUser","idUser","post","usernamePage","avatarPage","addVoteToPost","username","avatar","role","createdAt","email","Object","values","length","map","currentPost","console","log","id","text","image","place","ratedByMe","rate","owner","valueRated"],"sources":["/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/page/UserPostPage/index.js"],"sourcesContent":["import \"./style.css\";\nimport { useTokenContext } from \"../../context/TokenContext\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport usePostsByIdUser from \"../../hooks/usePostsByIdUser\";\nimport Post from \"../../components/Post\";\n//                 rate={currentPost.rate}esta sería la prop adecuada para pasarle a POSt. pero no quiero que enseñe en el header en esta pagina nunca la estrella\n// Ya que desde el back en este caso no llega la ingo de valueRated dado que no le puedo pasar tal y como está configurado el back, la info del logged User...(o si podría con isAuth abriendolo tengo la info del loggeado ademas de idUser que es el que recibe por padParam)\n\nconst UserPostPage = () => {\n  const { token, loggedUser } = useTokenContext();\n  const { idUser } = useParams();\n\n  const {\n    post,\n    /* setPost,\n    errorMessage, */\n    usernamePage,\n    avatarPage,\n    addVoteToPost /* \n    setUsernamePage,\n    loading,\n    idUser: idUserPage */,\n  } = usePostsByIdUser(idUser);\n\n  const { username, avatar, role, createdAt, email } = loggedUser;\n\n  // Si no hay token, redireccionamos a \"/login\"\"\n  if (!token) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  return (\n    <section>\n      <h2 className=\"profileName\">\n        <img\n          src={`http://localhost:4000/${avatarPage}`}\n          alt={username}\n          className=\"fotoAvatarPeque\"\n        />\n        {usernamePage}\n      </h2>\n      {Object.values(post).length > 0 &&\n        post.map((currentPost) => {\n          console.log(\"currentPost\", currentPost);\n          return (\n            <li className=\"userPost\" key={currentPost.id}>\n              <Post\n                id={currentPost.id}\n                text={currentPost.text}\n                image={currentPost.image}\n                avatar={currentPost.avatar}\n                username={currentPost.username}\n                email={currentPost.email}\n                place={currentPost.place}\n                ratedByMe={currentPost.ratedByMe}\n                idUser={currentPost.idUser}\n                rate={currentPost.rate}\n                owner={currentPost.owner}\n                createdAt={currentPost.createdAt}\n                valueRated={currentPost.valueRated}\n                addVoteToPost={addVoteToPost}\n              />\n            </li>\n          );\n        })}\n    </section>\n  );\n};\n\nexport default UserPostPage;\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,SAASA,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,QAAQ,EAAEC,SAAS,QAAQ,kBAAkB;AACtD,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,OAAOC,IAAI,MAAM,uBAAuB;AACxC;AACA;AAAA;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;EACzB,MAAM;IAAEC,KAAK;IAAEC;EAAW,CAAC,GAAGP,eAAe,EAAE;EAC/C,MAAM;IAAEQ;EAAO,CAAC,GAAGN,SAAS,EAAE;EAE9B,MAAM;IACJO,IAAI;IACJ;AACJ;IACIC,YAAY;IACZC,UAAU;IACVC,aAAa,CAAC;AAClB;AACA;AACA;EACE,CAAC,GAAGT,gBAAgB,CAACK,MAAM,CAAC;EAE5B,MAAM;IAAEK,QAAQ;IAAEC,MAAM;IAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGV,UAAU;;EAE/D;EACA,IAAI,CAACD,KAAK,EAAE;IACV,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EACjC;EAEA,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,aAAa;MAAA,wBACzB;QACE,GAAG,EAAG,yBAAwBK,UAAW,EAAE;QAC3C,GAAG,EAAEE,QAAS;QACd,SAAS,EAAC;MAAiB;QAAA;QAAA;QAAA;MAAA,QAC3B,EACDH,YAAY;IAAA;MAAA;MAAA;MAAA;IAAA,QACV,EACJQ,MAAM,CAACC,MAAM,CAACV,IAAI,CAAC,CAACW,MAAM,GAAG,CAAC,IAC7BX,IAAI,CAACY,GAAG,CAAEC,WAAW,IAAK;MACxBC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,WAAW,CAAC;MACvC,oBACE;QAAI,SAAS,EAAC,UAAU;QAAA,uBACtB,QAAC,IAAI;UACH,EAAE,EAAEA,WAAW,CAACG,EAAG;UACnB,IAAI,EAAEH,WAAW,CAACI,IAAK;UACvB,KAAK,EAAEJ,WAAW,CAACK,KAAM;UACzB,MAAM,EAAEL,WAAW,CAACR,MAAO;UAC3B,QAAQ,EAAEQ,WAAW,CAACT,QAAS;UAC/B,KAAK,EAAES,WAAW,CAACL,KAAM;UACzB,KAAK,EAAEK,WAAW,CAACM,KAAM;UACzB,SAAS,EAAEN,WAAW,CAACO,SAAU;UACjC,MAAM,EAAEP,WAAW,CAACd,MAAO;UAC3B,IAAI,EAAEc,WAAW,CAACQ,IAAK;UACvB,KAAK,EAAER,WAAW,CAACS,KAAM;UACzB,SAAS,EAAET,WAAW,CAACN,SAAU;UACjC,UAAU,EAAEM,WAAW,CAACU,UAAW;UACnC,aAAa,EAAEpB;QAAc;UAAA;UAAA;UAAA;QAAA;MAC7B,GAhB0BU,WAAW,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAiBvC;IAET,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEd,CAAC;AAAC,GA3DIpB,YAAY;EAAA,QACcL,eAAe,EAC1BE,SAAS,EAYxBC,gBAAgB;AAAA;AAAA,KAdhBE,YAAY;AA6DlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}