{"ast":null,"code":"var _jsxFileName = \"/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/page/UserPostPage/index.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport { useTokenContext } from \"../../context/TokenContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport PostList from \"../../components/PostList\";\nimport usePostsByIdUser from \"../../hooks/usePostsByIdUser\";\nimport Post from \"../../components/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPostPage = () => {\n  _s();\n  const {\n    token,\n    loggedUser\n  } = useTokenContext();\n  const {\n    idUser\n  } = useParams();\n  const {\n    post,\n    setPost,\n    errorMessage,\n    usernamePage,\n    avatarPage,\n    setUsernamePage,\n    loading,\n    idUser: idUserPage\n  } = usePostsByIdUser(idUser);\n\n  //aqui en la linea 16 no conseguimos darle el name del \"post\" que es un array con objetos que incluyen la la propiedad username con el valor del usuario que en todos los obj es el mismo que es el filtro de la fetch\n  // const currentPostUsername = post[0].username;\n  // console.log(\"post[0].username\", post[0].username);\n  // console.log(\"post.[0]\", post);\n  const {\n    username,\n    avatar,\n    role,\n    createdAt,\n    email /* usernamePage */\n  } = loggedUser;\n  /*   console.log(usernamePage);\n    */\n  // const navigate = useNavigate();\n\n  // Si no hay token, redireccionamos a \"/login\"\"\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  // const posts = [Object.values(post)];\n  // console.log(\" Object.values(post)?\", Object.values(post));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:4000/${avatar}`,\n        alt: username,\n        className: \"fotoAvatarPeque\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), usernamePage, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), Object.values(post).length > 0 && post.map(currentPost => {\n      return /*#__PURE__*/_jsxDEV(\"article\", {\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          id: currentPost.idPost,\n          text: currentPost.text,\n          image: currentPost.image,\n          avatar: currentPost.avatar,\n          username: currentPost.username,\n          email: currentPost.email,\n          place: currentPost.place,\n          ratedByMe: currentPost.ratedByMe,\n          idUser: idUser,\n          rate: currentPost.rate,\n          owner: currentPost.owner,\n          createdAt: currentPost.createdAt\n          // valueRated={currentPost.valueRated}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)\n      }, currentPost.idPost, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPostPage, \"Imh13E7jyBLzuy2NMHUY1uCqIdA=\", false, function () {\n  return [useTokenContext, useParams, usePostsByIdUser];\n});\n_c = UserPostPage;\nexport default UserPostPage;\nvar _c;\n$RefreshReg$(_c, \"UserPostPage\");","map":{"version":3,"names":["useState","useRef","useTokenContext","useNavigate","Navigate","useParams","PostList","usePostsByIdUser","Post","UserPostPage","token","loggedUser","idUser","post","setPost","errorMessage","usernamePage","avatarPage","setUsernamePage","loading","idUserPage","username","avatar","role","createdAt","email","Object","values","length","map","currentPost","idPost","text","image","place","ratedByMe","rate","owner"],"sources":["/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/page/UserPostPage/index.js"],"sourcesContent":["import { useState, useRef } from \"react\";\nimport { useTokenContext } from \"../../context/TokenContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport PostList from \"../../components/PostList\";\nimport usePostsByIdUser from \"../../hooks/usePostsByIdUser\";\nimport Post from \"../../components/Post\";\n\nconst UserPostPage = () => {\n  const { token, loggedUser } = useTokenContext();\n  const { idUser } = useParams();\n\n  const {\n    post,\n    setPost,\n    errorMessage,\n    usernamePage,\n    avatarPage,\n    setUsernamePage,\n    loading,\n    idUser: idUserPage,\n  } = usePostsByIdUser(idUser);\n\n  //aqui en la linea 16 no conseguimos darle el name del \"post\" que es un array con objetos que incluyen la la propiedad username con el valor del usuario que en todos los obj es el mismo que es el filtro de la fetch\n  // const currentPostUsername = post[0].username;\n  // console.log(\"post[0].username\", post[0].username);\n  // console.log(\"post.[0]\", post);\n  const { username, avatar, role, createdAt, email /* usernamePage */ } =\n    loggedUser;\n  /*   console.log(usernamePage);\n\n   */\n  // const navigate = useNavigate();\n\n  // Si no hay token, redireccionamos a \"/login\"\"\n  if (!token) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  // const posts = [Object.values(post)];\n  // console.log(\" Object.values(post)?\", Object.values(post));\n  return (\n    <section>\n      <h2>\n        <img\n          src={`http://localhost:4000/${avatar}`}\n          alt={username}\n          className=\"fotoAvatarPeque\"\n        />\n        {usernamePage}{\" \"}\n      </h2>\n      {Object.values(post).length > 0 &&\n        post.map((currentPost) => {\n          return (\n            <article key={currentPost.idPost}>\n              <Post\n                id={currentPost.idPost}\n                text={currentPost.text}\n                image={currentPost.image}\n                avatar={currentPost.avatar}\n                username={currentPost.username}\n                email={currentPost.email}\n                place={currentPost.place}\n                ratedByMe={currentPost.ratedByMe}\n                idUser={idUser}\n                rate={currentPost.rate}\n                owner={currentPost.owner}\n                createdAt={currentPost.createdAt}\n                // valueRated={currentPost.valueRated}\n              />\n            </article>\n          );\n        })}\n    </section>\n  );\n};\n\nexport default UserPostPage;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,kBAAkB;AACtD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,OAAOC,IAAI,MAAM,uBAAuB;AAAC;AAEzC,MAAMC,YAAY,GAAG,MAAM;EAAA;EACzB,MAAM;IAAEC,KAAK;IAAEC;EAAW,CAAC,GAAGT,eAAe,EAAE;EAC/C,MAAM;IAAEU;EAAO,CAAC,GAAGP,SAAS,EAAE;EAE9B,MAAM;IACJQ,IAAI;IACJC,OAAO;IACPC,YAAY;IACZC,YAAY;IACZC,UAAU;IACVC,eAAe;IACfC,OAAO;IACPP,MAAM,EAAEQ;EACV,CAAC,GAAGb,gBAAgB,CAACK,MAAM,CAAC;;EAE5B;EACA;EACA;EACA;EACA,MAAM;IAAES,QAAQ;IAAEC,MAAM;IAAEC,IAAI;IAAEC,SAAS;IAAEC,KAAK,CAAC;EAAmB,CAAC,GACnEd,UAAU;EACZ;AACF;EAEE;;EAEA;EACA,IAAI,CAACD,KAAK,EAAE;IACV,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EACjC;;EAEA;EACA;EACA,oBACE;IAAA,wBACE;MAAA,wBACE;QACE,GAAG,EAAG,yBAAwBY,MAAO,EAAE;QACvC,GAAG,EAAED,QAAS;QACd,SAAS,EAAC;MAAiB;QAAA;QAAA;QAAA;MAAA,QAC3B,EACDL,YAAY,EAAE,GAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACf,EACJU,MAAM,CAACC,MAAM,CAACd,IAAI,CAAC,CAACe,MAAM,GAAG,CAAC,IAC7Bf,IAAI,CAACgB,GAAG,CAAEC,WAAW,IAAK;MACxB,oBACE;QAAA,uBACE,QAAC,IAAI;UACH,EAAE,EAAEA,WAAW,CAACC,MAAO;UACvB,IAAI,EAAED,WAAW,CAACE,IAAK;UACvB,KAAK,EAAEF,WAAW,CAACG,KAAM;UACzB,MAAM,EAAEH,WAAW,CAACR,MAAO;UAC3B,QAAQ,EAAEQ,WAAW,CAACT,QAAS;UAC/B,KAAK,EAAES,WAAW,CAACL,KAAM;UACzB,KAAK,EAAEK,WAAW,CAACI,KAAM;UACzB,SAAS,EAAEJ,WAAW,CAACK,SAAU;UACjC,MAAM,EAAEvB,MAAO;UACf,IAAI,EAAEkB,WAAW,CAACM,IAAK;UACvB,KAAK,EAAEN,WAAW,CAACO,KAAM;UACzB,SAAS,EAAEP,WAAW,CAACN;UACvB;QAAA;UAAA;UAAA;UAAA;QAAA;MACA,GAfUM,WAAW,CAACC,MAAM;QAAA;QAAA;QAAA;MAAA,QAgBtB;IAEd,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEd,CAAC;AAAC,GAnEItB,YAAY;EAAA,QACcP,eAAe,EAC1BG,SAAS,EAWxBE,gBAAgB;AAAA;AAAA,KAbhBE,YAAY;AAqElB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}