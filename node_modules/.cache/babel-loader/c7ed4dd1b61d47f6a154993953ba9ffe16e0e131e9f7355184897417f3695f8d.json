{"ast":null,"code":"var _jsxFileName = \"/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/page/NewPostPage/index.js\",\n  _s = $RefreshSig$();\nimport \"./style.css\";\nimport { useState, useRef } from \"react\";\nimport { useTokenContext } from \"../../context/TokenContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Navigate } from \"react-router-dom\";\nimport { usePostsContext } from \"../../context/PostsContext\";\nimport PostPhoto from \"../../components/PostPhoto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPostPage = () => {\n  _s();\n  const [text, SetText] = useState(\"\");\n  const [place, SetPlace] = useState(\"\");\n  const [errorMessage, SetErrorMessage] = useState(\"\");\n  const [imgPrev, SetimgPrev] = useState(\"\");\n  let urlPrev = URL.createObjectURL(imgPrev);\n  const {\n    setPosts,\n    posts\n  } = usePostsContext();\n  const imagesInputRef = useRef();\n  const {\n    token\n  } = useTokenContext();\n  const navigate = useNavigate();\n\n  // Si no hay token, redireccionamos a \"/login\"\"\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Crea tu nuevo Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newPostForm\",\n      onSubmit: async event => {\n        try {\n          event.preventDefault();\n          const images = imagesInputRef.current.files;\n          const formData = new FormData();\n          formData.set(\"text\", text);\n          formData.set(\"place\", place);\n          if (images.length) {\n            for (const image of images) {\n              formData.set(image.name, image);\n            }\n          }\n          const res = await fetch(\"http://localhost:4000/posts\", {\n            method: \"POST\",\n            headers: {\n              Authorization: token\n            },\n            body: formData\n          });\n          const body = await res.json();\n          if (!res.ok) {\n            throw new Error(body.message);\n          }\n          // const newPost = body.data.post;\n          console.log(\"posts\", posts);\n          // posts.push(newPost);\n          console.log(\"body.idPosts\", body.idPost);\n          setPosts(body.idPost);\n          navigate(\"/\");\n        } catch (error) {\n          console.error(error);\n          SetErrorMessage(error.message);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"text\",\n        children: \"Descripci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"text\",\n        required: true,\n        value: text,\n        onChange: event => {\n          SetText(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"place\",\n        children: \"Lugar:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"place\",\n        required: true,\n        value: place,\n        onChange: event => {\n          SetPlace(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: \"Imagen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image\",\n        type: \"file\",\n        multiple: true,\n        required: true,\n        accept: \"image/*\",\n        ref: imagesInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostPhoto, {\n        image: imgPrev,\n        alt: \"imgPrev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Env\\xEDa tu publicaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPostPage, \"ufvFczVhMrhKdc2Wzi380JgOYvE=\", false, function () {\n  return [usePostsContext, useTokenContext, useNavigate];\n});\n_c = NewPostPage;\nexport default NewPostPage;\nvar _c;\n$RefreshReg$(_c, \"NewPostPage\");","map":{"version":3,"names":["useState","useRef","useTokenContext","useNavigate","Navigate","usePostsContext","PostPhoto","NewPostPage","text","SetText","place","SetPlace","errorMessage","SetErrorMessage","imgPrev","SetimgPrev","urlPrev","URL","createObjectURL","setPosts","posts","imagesInputRef","token","navigate","event","preventDefault","images","current","files","formData","FormData","set","length","image","name","res","fetch","method","headers","Authorization","body","json","ok","Error","message","console","log","idPost","error","target","value"],"sources":["/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/page/NewPostPage/index.js"],"sourcesContent":["import \"./style.css\";\nimport { useState, useRef } from \"react\";\nimport { useTokenContext } from \"../../context/TokenContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Navigate } from \"react-router-dom\";\nimport { usePostsContext } from \"../../context/PostsContext\";\nimport PostPhoto from \"../../components/PostPhoto\";\n\nconst NewPostPage = () => {\n  const [text, SetText] = useState(\"\");\n  const [place, SetPlace] = useState(\"\");\n  const [errorMessage, SetErrorMessage] = useState(\"\");\n  const [imgPrev, SetimgPrev] = useState(\"\");\n  let urlPrev = URL.createObjectURL(imgPrev);\n  const { setPosts, posts } = usePostsContext();\n\n  const imagesInputRef = useRef();\n\n  const { token } = useTokenContext();\n\n  const navigate = useNavigate();\n\n  // Si no hay token, redireccionamos a \"/login\"\"\n  if (!token) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  return (\n    <section>\n      <h2> Crea tu nuevo Post</h2>\n\n      <form\n        className=\"newPostForm\"\n        onSubmit={async (event) => {\n          try {\n            event.preventDefault();\n            const images = imagesInputRef.current.files;\n\n            const formData = new FormData();\n\n            formData.set(\"text\", text);\n            formData.set(\"place\", place);\n\n            if (images.length) {\n              for (const image of images) {\n                formData.set(image.name, image);\n              }\n            }\n\n            const res = await fetch(\"http://localhost:4000/posts\", {\n              method: \"POST\",\n              headers: { Authorization: token },\n              body: formData,\n            });\n\n            const body = await res.json();\n\n            if (!res.ok) {\n              throw new Error(body.message);\n            }\n            // const newPost = body.data.post;\n            console.log(\"posts\", posts);\n            // posts.push(newPost);\n            console.log(\"body.idPosts\", body.idPost);\n\n            setPosts(body.idPost);\n            navigate(\"/\");\n          } catch (error) {\n            console.error(error);\n            SetErrorMessage(error.message);\n          }\n        }}\n      >\n        <label htmlFor=\"text\">Descripción</label>\n        <input\n          id=\"text\"\n          required\n          value={text}\n          onChange={(event) => {\n            SetText(event.target.value);\n          }}\n        ></input>\n\n        <label htmlFor=\"place\">Lugar:</label>\n        <input\n          id=\"place\"\n          required\n          value={place}\n          onChange={(event) => {\n            SetPlace(event.target.value);\n          }}\n        ></input>\n\n        <label htmlFor=\"image\">Imagen</label>\n        <input\n          id=\"image\"\n          type=\"file\"\n          multiple\n          required\n          accept=\"image/*\"\n          ref={imagesInputRef}\n        ></input>\n        <PostPhoto image={imgPrev} alt=\"imgPrev\" />\n\n        <button>Envía tu publicación</button>\n      </form>\n    </section>\n  );\n};\n\nexport default NewPostPage;\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,OAAOC,SAAS,MAAM,4BAA4B;AAAC;AAEnD,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,IAAIgB,OAAO,GAAGC,GAAG,CAACC,eAAe,CAACJ,OAAO,CAAC;EAC1C,MAAM;IAAEK,QAAQ;IAAEC;EAAM,CAAC,GAAGf,eAAe,EAAE;EAE7C,MAAMgB,cAAc,GAAGpB,MAAM,EAAE;EAE/B,MAAM;IAAEqB;EAAM,CAAC,GAAGpB,eAAe,EAAE;EAEnC,MAAMqB,QAAQ,GAAGpB,WAAW,EAAE;;EAE9B;EACA,IAAI,CAACmB,KAAK,EAAE;IACV,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EACjC;EAEA,oBACE;IAAA,wBACE;MAAA,UAAI;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAK,eAE5B;MACE,SAAS,EAAC,aAAa;MACvB,QAAQ,EAAE,MAAOE,KAAK,IAAK;QACzB,IAAI;UACFA,KAAK,CAACC,cAAc,EAAE;UACtB,MAAMC,MAAM,GAAGL,cAAc,CAACM,OAAO,CAACC,KAAK;UAE3C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;UAE/BD,QAAQ,CAACE,GAAG,CAAC,MAAM,EAAEvB,IAAI,CAAC;UAC1BqB,QAAQ,CAACE,GAAG,CAAC,OAAO,EAAErB,KAAK,CAAC;UAE5B,IAAIgB,MAAM,CAACM,MAAM,EAAE;YACjB,KAAK,MAAMC,KAAK,IAAIP,MAAM,EAAE;cAC1BG,QAAQ,CAACE,GAAG,CAACE,KAAK,CAACC,IAAI,EAAED,KAAK,CAAC;YACjC;UACF;UAEA,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;YACrDC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cAAEC,aAAa,EAAEjB;YAAM,CAAC;YACjCkB,IAAI,EAAEX;UACR,CAAC,CAAC;UAEF,MAAMW,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,EAAE;UAE7B,IAAI,CAACN,GAAG,CAACO,EAAE,EAAE;YACX,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC;UAC/B;UACA;UACAC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE1B,KAAK,CAAC;UAC3B;UACAyB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEN,IAAI,CAACO,MAAM,CAAC;UAExC5B,QAAQ,CAACqB,IAAI,CAACO,MAAM,CAAC;UACrBxB,QAAQ,CAAC,GAAG,CAAC;QACf,CAAC,CAAC,OAAOyB,KAAK,EAAE;UACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;UACpBnC,eAAe,CAACmC,KAAK,CAACJ,OAAO,CAAC;QAChC;MACF,CAAE;MAAA,wBAEF;QAAO,OAAO,EAAC,MAAM;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAQ,eACzC;QACE,EAAE,EAAC,MAAM;QACT,QAAQ;QACR,KAAK,EAAEpC,IAAK;QACZ,QAAQ,EAAGgB,KAAK,IAAK;UACnBf,OAAO,CAACe,KAAK,CAACyB,MAAM,CAACC,KAAK,CAAC;QAC7B;MAAE;QAAA;QAAA;QAAA;MAAA,QACK,eAET;QAAO,OAAO,EAAC,OAAO;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ,eACrC;QACE,EAAE,EAAC,OAAO;QACV,QAAQ;QACR,KAAK,EAAExC,KAAM;QACb,QAAQ,EAAGc,KAAK,IAAK;UACnBb,QAAQ,CAACa,KAAK,CAACyB,MAAM,CAACC,KAAK,CAAC;QAC9B;MAAE;QAAA;QAAA;QAAA;MAAA,QACK,eAET;QAAO,OAAO,EAAC,OAAO;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAQ,eACrC;QACE,EAAE,EAAC,OAAO;QACV,IAAI,EAAC,MAAM;QACX,QAAQ;QACR,QAAQ;QACR,MAAM,EAAC,SAAS;QAChB,GAAG,EAAE7B;MAAe;QAAA;QAAA;QAAA;MAAA,QACb,eACT,QAAC,SAAS;QAAC,KAAK,EAAEP,OAAQ;QAAC,GAAG,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eAE3C;QAAA,UAAQ;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAChC;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEd,CAAC;AAAC,GApGIP,WAAW;EAAA,QAMaF,eAAe,EAIzBH,eAAe,EAEhBC,WAAW;AAAA;AAAA,KAZxBI,WAAW;AAsGjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}