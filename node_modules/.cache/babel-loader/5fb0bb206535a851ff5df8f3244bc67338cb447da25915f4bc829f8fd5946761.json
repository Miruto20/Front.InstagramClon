{"ast":null,"code":"var _jsxFileName = \"/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/components/DeletePost/index.js\",\n  _s = $RefreshSig$();\nimport \"./style.css\";\nimport { useTokenContext } from \"../../context/TokenContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useEffect } from \"react\";\n// import usePosts from \"../../hooks/usePosts\";\nimport { usePostsContext } from \"../../context/PostsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeletePost = _ref => {\n  _s();\n  let {\n    idUser,\n    idPost,\n    setShowBorrarModal\n  } = _ref;\n  const navigate = useNavigate();\n  const {\n    token\n  } = useTokenContext();\n  // const { posts, setPosts } = usePosts();\n  const {\n    posts,\n    setPosts\n  } = usePostsContext();\n  useEffect(() => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      //fetch para solicitar que te envíe un correo con una nueva contraseña\n      onClick: async () => {\n        try {\n          const res = await fetch(`http://localhost:4000/posts/${idPost}`, {\n            method: \"DELETE\",\n            body: JSON.stringify({\n              idUser,\n              idPost\n            }),\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: token\n            }\n          });\n          const body = await res.json();\n          console.log(body);\n          if (!res.ok) {\n            throw new Error(body.message);\n          }\n          setPosts(prevPosts => prevPosts.filter(post => post.id !== idPost));\n\n          // console.log(\"body.data.posts\", body.data.posts);\n          // setPosts(body.data.posts);\n          navigate(\"/\");\n          toast.success(body.message);\n        } catch (error) {\n          console.error(error);\n          toast.error(error.message);\n        } finally {\n          setShowBorrarModal(false);\n        }\n      },\n      children: \"Borrar Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }, [posts]);\n};\n_s(DeletePost, \"IUXbni8olSc1wsB6qjokE8mB0vY=\", false, function () {\n  return [useNavigate, useTokenContext, usePostsContext];\n});\n_c = DeletePost;\nexport default DeletePost;\nvar _c;\n$RefreshReg$(_c, \"DeletePost\");","map":{"version":3,"names":["useTokenContext","useNavigate","toast","useEffect","usePostsContext","DeletePost","idUser","idPost","setShowBorrarModal","navigate","token","posts","setPosts","res","fetch","method","body","JSON","stringify","headers","Authorization","json","console","log","ok","Error","message","prevPosts","filter","post","id","success","error"],"sources":["/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/components/DeletePost/index.js"],"sourcesContent":["import \"./style.css\";\nimport { useTokenContext } from \"../../context/TokenContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useEffect } from \"react\";\n// import usePosts from \"../../hooks/usePosts\";\nimport { usePostsContext } from \"../../context/PostsContext\";\n\nconst DeletePost = ({ idUser, idPost, setShowBorrarModal }) => {\n  const navigate = useNavigate();\n\n  const { token } = useTokenContext();\n  // const { posts, setPosts } = usePosts();\n  const { posts, setPosts } = usePostsContext();\n\n  useEffect(() => {\n    return (\n      <button\n        //fetch para solicitar que te envíe un correo con una nueva contraseña\n        onClick={async () => {\n          try {\n            const res = await fetch(`http://localhost:4000/posts/${idPost}`, {\n              method: \"DELETE\",\n              body: JSON.stringify({ idUser, idPost }),\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: token,\n              },\n            });\n\n            const body = await res.json();\n            console.log(body);\n\n            if (!res.ok) {\n              throw new Error(body.message);\n            }\n            setPosts((prevPosts) =>\n              prevPosts.filter((post) => post.id !== idPost)\n            );\n\n            // console.log(\"body.data.posts\", body.data.posts);\n            // setPosts(body.data.posts);\n            navigate(\"/\");\n            toast.success(body.message);\n          } catch (error) {\n            console.error(error);\n            toast.error(error.message);\n          } finally {\n            setShowBorrarModal(false);\n          }\n        }}\n      >\n        Borrar Post\n      </button>\n    );\n  }, [posts]);\n};\n\nexport default DeletePost;\n"],"mappings":";;AAAA,OAAO,aAAa;AACpB,SAASA,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,SAAS,QAAQ,OAAO;AACjC;AACA,SAASC,eAAe,QAAQ,4BAA4B;AAAC;AAE7D,MAAMC,UAAU,GAAG,QAA4C;EAAA;EAAA,IAA3C;IAAEC,MAAM;IAAEC,MAAM;IAAEC;EAAmB,CAAC;EACxD,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAE9B,MAAM;IAAES;EAAM,CAAC,GAAGV,eAAe,EAAE;EACnC;EACA,MAAM;IAAEW,KAAK;IAAEC;EAAS,CAAC,GAAGR,eAAe,EAAE;EAE7CD,SAAS,CAAC,MAAM;IACd,oBACE;MACE;MACA,OAAO,EAAE,YAAY;QACnB,IAAI;UACF,MAAMU,GAAG,GAAG,MAAMC,KAAK,CAAE,+BAA8BP,MAAO,EAAC,EAAE;YAC/DQ,MAAM,EAAE,QAAQ;YAChBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAEZ,MAAM;cAAEC;YAAO,CAAC,CAAC;YACxCY,OAAO,EAAE;cACP,cAAc,EAAE,kBAAkB;cAClCC,aAAa,EAAEV;YACjB;UACF,CAAC,CAAC;UAEF,MAAMM,IAAI,GAAG,MAAMH,GAAG,CAACQ,IAAI,EAAE;UAC7BC,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;UAEjB,IAAI,CAACH,GAAG,CAACW,EAAE,EAAE;YACX,MAAM,IAAIC,KAAK,CAACT,IAAI,CAACU,OAAO,CAAC;UAC/B;UACAd,QAAQ,CAAEe,SAAS,IACjBA,SAAS,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKvB,MAAM,CAAC,CAC/C;;UAED;UACA;UACAE,QAAQ,CAAC,GAAG,CAAC;UACbP,KAAK,CAAC6B,OAAO,CAACf,IAAI,CAACU,OAAO,CAAC;QAC7B,CAAC,CAAC,OAAOM,KAAK,EAAE;UACdV,OAAO,CAACU,KAAK,CAACA,KAAK,CAAC;UACpB9B,KAAK,CAAC8B,KAAK,CAACA,KAAK,CAACN,OAAO,CAAC;QAC5B,CAAC,SAAS;UACRlB,kBAAkB,CAAC,KAAK,CAAC;QAC3B;MACF,CAAE;MAAA,UACH;IAED;MAAA;MAAA;MAAA;IAAA,QAAS;EAEb,CAAC,EAAE,CAACG,KAAK,CAAC,CAAC;AACb,CAAC;AAAC,GAhDIN,UAAU;EAAA,QACGJ,WAAW,EAEVD,eAAe,EAELI,eAAe;AAAA;AAAA,KALvCC,UAAU;AAkDhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}