{"ast":null,"code":"var _jsxFileName = \"/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/page/NewPostPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport { useTokenContext } from \"../context/TokenContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPostPage = () => {\n  _s();\n  const [text, SetText] = useState(\"\");\n  const [place, SetPlace] = useState(\"\");\n  const [errorMessage, SetErrorMessage] = useState(\"\");\n  const imagesInputRef = useRef();\n  const {\n    token\n  } = useTokenContext();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Crea tu nuevo Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: async event => {\n        try {\n          event.preventDefault();\n          const images = imagesInputRef.current.files;\n          const formData = new FormData();\n          formData.set(\"text\", text);\n          formData.set(\"place\", place);\n          if (images.length) {\n            for (const image of images) {\n              formData.set(image.name, image);\n            }\n          }\n          const res = await fetch(\"http://localhost:4000/posts\", {\n            method: \"POST\",\n            headers: {\n              Authorization: token\n            },\n            body: formData\n          });\n          const body = await res.json();\n          if (!res.ok) {\n            throw new Error(body.message);\n          }\n          navigate(\"/\");\n        } catch (error) {\n          console.error(error);\n          SetErrorMessage(error.message);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"text\",\n        required: true,\n        value: text,\n        onChange: event => {\n          SetText(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"place\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"place\",\n        required: true,\n        value: place,\n        onChange: event => {\n          SetPlace(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image\",\n        type: \"file\",\n        multiple: true,\n        required: true,\n        accept: \"image/*\",\n        ref: imagesInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Env\\xEDa tu publicaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPostPage, \"39zUttmflBf2gWTPl98xR2GvF6o=\", false, function () {\n  return [useTokenContext, useNavigate];\n});\n_c = NewPostPage;\nexport default NewPostPage;\nvar _c;\n$RefreshReg$(_c, \"NewPostPage\");","map":{"version":3,"names":["useState","useRef","useTokenContext","useNavigate","NewPostPage","text","SetText","place","SetPlace","errorMessage","SetErrorMessage","imagesInputRef","token","navigate","event","preventDefault","images","current","files","formData","FormData","set","length","image","name","res","fetch","method","headers","Authorization","body","json","ok","Error","message","error","console","target","value"],"sources":["/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/page/NewPostPage.js"],"sourcesContent":["import { useState, useRef } from \"react\";\nimport { useTokenContext } from \"../context/TokenContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst NewPostPage = () => {\n  const [text, SetText] = useState(\"\");\n  const [place, SetPlace] = useState(\"\");\n  const [errorMessage, SetErrorMessage] = useState(\"\");\n\n  const imagesInputRef = useRef();\n\n  const { token } = useTokenContext();\n\n  const navigate = useNavigate();\n\n  return (\n    <section>\n      <h2> Crea tu nuevo Post</h2>\n\n      <form\n        onSubmit={async (event) => {\n          try {\n            event.preventDefault();\n            const images = imagesInputRef.current.files;\n\n            const formData = new FormData();\n\n            formData.set(\"text\", text);\n            formData.set(\"place\", place);\n\n            if (images.length) {\n              for (const image of images) {\n                formData.set(image.name, image);\n              }\n            }\n\n            const res = await fetch(\"http://localhost:4000/posts\", {\n              method: \"POST\",\n              headers: { Authorization: token },\n              body: formData,\n            });\n\n            const body = await res.json();\n\n            if (!res.ok) {\n              throw new Error(body.message);\n            }\n            navigate(\"/\");\n          } catch (error) {\n            console.error(error);\n            SetErrorMessage(error.message);\n          }\n        }}\n      >\n        <label htmlFor=\"text\"></label>\n        <input\n          id=\"text\"\n          required\n          value={text}\n          onChange={(event) => {\n            SetText(event.target.value);\n          }}\n        ></input>\n\n        <label htmlFor=\"place\"></label>\n        <input\n          id=\"place\"\n          required\n          value={place}\n          onChange={(event) => {\n            SetPlace(event.target.value);\n          }}\n        ></input>\n\n        <label htmlFor=\"image\"></label>\n        <input\n          id=\"image\"\n          type=\"file\"\n          multiple\n          required\n          accept=\"image/*\"\n          ref={imagesInputRef}\n        ></input>\n\n        <button>Envía tu publicación</button>\n      </form>\n    </section>\n  );\n};\n\nexport default NewPostPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}