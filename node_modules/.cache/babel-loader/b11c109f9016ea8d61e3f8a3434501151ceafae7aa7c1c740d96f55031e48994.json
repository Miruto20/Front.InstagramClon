{"ast":null,"code":"var _jsxFileName = \"/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/page/UserPostPage/index.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport { useTokenContext } from \"../../context/TokenContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport PostList from \"../../components/PostList\";\nimport usePostsByIdUser from \"../../hooks/usePostsByIdUser\";\nimport Post from \"../../components/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserPostPage = () => {\n  _s();\n  const {\n    token,\n    loggedUser\n  } = useTokenContext();\n  const {\n    idUser\n  } = useParams();\n  const {\n    post,\n    setPost,\n    errorMessage,\n    loading\n  } = usePostsByIdUser(idUser);\n\n  //aqui en la linea 16 no conseguimos darle el name del \"post\" que es un array con objetos que incluyen la la propiedad username con el valor del usuario que en todos los obj es el mismo que es el filtro de la fetch\n  const currentPostUsername = post[0].username;\n  console.log(\"post[0].username\", post[0].username);\n  // console.log(\"post.[0]\", post);\n  const {\n    username,\n    avatar,\n    role,\n    createdAt,\n    email,\n    id: idUserLogged\n  } = loggedUser;\n\n  // const navigate = useNavigate();\n\n  // Si no hay token, redireccionamos a \"/login\"\"\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  // const posts = [Object.values(post)];\n  console.log(\" Object.values(post)?\", Object.values(post));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"perfil de \", currentPostUsername]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), Object.values(post).length > 0 && post.map(currentPost => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          id: currentPost.idPost,\n          text: currentPost.text,\n          image: currentPost.image,\n          avatar: currentPost.avatar,\n          username: currentPost.username,\n          email: currentPost.email,\n          place: currentPost.place,\n          idUser: idUser,\n          rate: currentPost.rate,\n          owner: currentPost.owner,\n          createdAt: currentPost.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPostPage, \"IGceWmm2/HSTeCSl/UqqBYEcQ88=\", false, function () {\n  return [useTokenContext, useParams, usePostsByIdUser];\n});\n_c = UserPostPage;\nexport default UserPostPage;\nvar _c;\n$RefreshReg$(_c, \"UserPostPage\");","map":{"version":3,"names":["useState","useRef","useTokenContext","useNavigate","Navigate","useParams","PostList","usePostsByIdUser","Post","UserPostPage","token","loggedUser","idUser","post","setPost","errorMessage","loading","currentPostUsername","username","console","log","avatar","role","createdAt","email","id","idUserLogged","Object","values","length","map","currentPost","idPost","text","image","place","rate","owner"],"sources":["/home/miruto20/Documents/Proyectos/instagram.Proy.Beta.Front/front.instagram/src/page/UserPostPage/index.js"],"sourcesContent":["import { useState, useRef } from \"react\";\nimport { useTokenContext } from \"../../context/TokenContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Navigate, useParams } from \"react-router-dom\";\nimport PostList from \"../../components/PostList\";\nimport usePostsByIdUser from \"../../hooks/usePostsByIdUser\";\nimport Post from \"../../components/Post\";\n\nconst UserPostPage = () => {\n  const { token, loggedUser } = useTokenContext();\n  const { idUser } = useParams();\n\n  const { post, setPost, errorMessage, loading } = usePostsByIdUser(idUser);\n\n  //aqui en la linea 16 no conseguimos darle el name del \"post\" que es un array con objetos que incluyen la la propiedad username con el valor del usuario que en todos los obj es el mismo que es el filtro de la fetch\n  const currentPostUsername = post[0].username;\n  console.log(\"post[0].username\", post[0].username);\n  // console.log(\"post.[0]\", post);\n  const {\n    username,\n    avatar,\n    role,\n    createdAt,\n    email,\n    id: idUserLogged,\n  } = loggedUser;\n\n  // const navigate = useNavigate();\n\n  // Si no hay token, redireccionamos a \"/login\"\"\n  if (!token) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  // const posts = [Object.values(post)];\n  console.log(\" Object.values(post)?\", Object.values(post));\n  return (\n    <section>\n      <h2>perfil de {currentPostUsername}</h2>\n      {Object.values(post).length > 0 &&\n        post.map((currentPost) => {\n          return (\n            <>\n              <Post\n                id={currentPost.idPost}\n                text={currentPost.text}\n                image={currentPost.image}\n                avatar={currentPost.avatar}\n                username={currentPost.username}\n                email={currentPost.email}\n                place={currentPost.place}\n                idUser={idUser}\n                rate={currentPost.rate}\n                owner={currentPost.owner}\n                createdAt={currentPost.createdAt}\n              />\n            </>\n          );\n        })}\n    </section>\n  );\n};\n\nexport default UserPostPage;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,kBAAkB;AACtD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,OAAOC,IAAI,MAAM,uBAAuB;AAAC;AAAA;AAEzC,MAAMC,YAAY,GAAG,MAAM;EAAA;EACzB,MAAM;IAAEC,KAAK;IAAEC;EAAW,CAAC,GAAGT,eAAe,EAAE;EAC/C,MAAM;IAAEU;EAAO,CAAC,GAAGP,SAAS,EAAE;EAE9B,MAAM;IAAEQ,IAAI;IAAEC,OAAO;IAAEC,YAAY;IAAEC;EAAQ,CAAC,GAAGT,gBAAgB,CAACK,MAAM,CAAC;;EAEzE;EACA,MAAMK,mBAAmB,GAAGJ,IAAI,CAAC,CAAC,CAAC,CAACK,QAAQ;EAC5CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEP,IAAI,CAAC,CAAC,CAAC,CAACK,QAAQ,CAAC;EACjD;EACA,MAAM;IACJA,QAAQ;IACRG,MAAM;IACNC,IAAI;IACJC,SAAS;IACTC,KAAK;IACLC,EAAE,EAAEC;EACN,CAAC,GAAGf,UAAU;;EAEd;;EAEA;EACA,IAAI,CAACD,KAAK,EAAE;IACV,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EACjC;;EAEA;EACAS,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEO,MAAM,CAACC,MAAM,CAACf,IAAI,CAAC,CAAC;EACzD,oBACE;IAAA,wBACE;MAAA,WAAI,YAAU,EAACI,mBAAmB;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,EACvCU,MAAM,CAACC,MAAM,CAACf,IAAI,CAAC,CAACgB,MAAM,GAAG,CAAC,IAC7BhB,IAAI,CAACiB,GAAG,CAAEC,WAAW,IAAK;MACxB,oBACE;QAAA,uBACE,QAAC,IAAI;UACH,EAAE,EAAEA,WAAW,CAACC,MAAO;UACvB,IAAI,EAAED,WAAW,CAACE,IAAK;UACvB,KAAK,EAAEF,WAAW,CAACG,KAAM;UACzB,MAAM,EAAEH,WAAW,CAACV,MAAO;UAC3B,QAAQ,EAAEU,WAAW,CAACb,QAAS;UAC/B,KAAK,EAAEa,WAAW,CAACP,KAAM;UACzB,KAAK,EAAEO,WAAW,CAACI,KAAM;UACzB,MAAM,EAAEvB,MAAO;UACf,IAAI,EAAEmB,WAAW,CAACK,IAAK;UACvB,KAAK,EAAEL,WAAW,CAACM,KAAM;UACzB,SAAS,EAAEN,WAAW,CAACR;QAAU;UAAA;UAAA;UAAA;QAAA;MACjC,iBACD;IAEP,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEd,CAAC;AAAC,GArDId,YAAY;EAAA,QACcP,eAAe,EAC1BG,SAAS,EAEqBE,gBAAgB;AAAA;AAAA,KAJ7DE,YAAY;AAuDlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}